import streamlit as st
import logging
from modules._3_case_study_evaluation_2.tabs.tab1_evaluation import display_content as display_evaluation
from modules._3_case_study_evaluation_2.tabs.tab2_user_summary import display_content as display_user_summary
from modules._3_case_study_evaluation_2.tabs.tab3_team_summary import display_content as display_team_summary

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def display_content_page():

    # Title and description
    st.title("AI Case Study Evaluation (2)")
    st.markdown("""
    This evaluation tool will help gather a second round of feedbacks of the AI Case Studies generated by the application.
    """)

    # Initialize current tab in session state if not exists
    if 'current_tab' not in st.session_state:
        st.session_state.current_tab = "Guidelines"

    # Define tabs for different functionalities
    tab1, tab2, tab3 = st.tabs([
        "üìù Evaluation", 
        "üìà User Summary",
        "üìà Team Summary"
    ])

    # Function to handle tab change
    def handle_tab_change(tab_name):
        if st.session_state.current_tab != tab_name:
            st.session_state.current_tab = tab_name

    # = = = = = = = = = = = = = = = = = = = =
    # TAB 1: EVALUATION
    # = = = = = = = = = = = = = = = = = = = =
    with tab1:
        handle_tab_change("Evaluation")
        display_evaluation()

    # = = = = = = = = = = = = = = = = = = = =
    # TAB 2: USER SUMMARY
    # = = = = = = = = = = = = = = = = = = = =
    with tab2:
        handle_tab_change("User Summary")
        display_user_summary()
        
    # = = = = = = = = = = = = = = = = = = = =
    # TAB 3: TEAM SUMMARY
    # = = = = = = = = = = = = = = = = = = = =
    with tab3:
        handle_tab_change("Team Summary")
        display_team_summary()